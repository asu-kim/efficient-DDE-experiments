target C {
	// logging: debug,
	tracing: true,
	timeout: 500 sec
}

reactor TempSensor {
	timer t(0, 60 sec)

	state count: int = 5

	output out: int

	reaction(t) -> out {=
		lf_set(out, 1);
	=}
}

reactor UltraSonicSensor (Period:time = 20 msec, ResultFile:string = "..//..//Results//Dummy.csv") {
	preamble {=
		FILE* fp;
	=}
	timer t(Period, Period)

	state count: int = 0

	input in: int

	output out: int

	reaction(startup) {=
		fp = fopen(self->ResultFile, "a");
		if(fp == NULL) {
			lf_print("Couldn't open the file.");
		}
		lf_print("Timer period is %ld.", self->Period);
	=}

	reaction(t) -> out {=
		if (lf_time_logical_elapsed() % SEC(1) == 0) {
			lf_set(out, 1);
		}

		if (lf_time_logical_elapsed() % MSEC(500) == 0) {
			instant_t lag = lf_time_physical() - lf_time_logical();
			if(fp == NULL) {
					lf_print("Couldn't open the file.");
			} else {
					fprintf(fp, "%ld,", lag);
					fprintf(fp, "\n");
			}
		}
	=}

	reaction(in) {=
		// lf_print("Received a message at " PRINTF_TIME ".", lf_time_logical_elapsed());
	=}

	reaction(shutdown) {=
		fclose(fp);
	=}
}
  
reactor Actuator {
	input in:int
	state count:int = 0;

	reaction(in) {=
		self->count++;
	=}

	reaction(shutdown) {=
		lf_print("Received %d messages.", self->count);
	=}
}

federated reactor at localhost {
	t_t = new TempSensor()
	t_u = new UltraSonicSensor(Period = 20 msec, ResultFile = ".//DistanceSensing_20ms.csv")
	t_a = new Actuator()

	t_t.out -> t_u.in
	t_u.out -> t_a.in
}
