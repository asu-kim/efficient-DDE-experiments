target C {
  // logging: debug,
  tracing: true,
  timeout: 500 sec
}

reactor Sender (Period:time = 20 msec, ResultFile:string = "..//Results//Dummy.csv") {
  preamble {=
    FILE* fp;
  =}
  timer t(Period, Period)

  state count: int = 0

  output out: int

  reaction(startup) {=

    fp = fopen(self->ResultFile, "a");
    if(fp == NULL) {
      lf_print("Couldn't open the file.");
    }
      lf_print("Timer period is %ld.", self->Period);
  =}

  reaction(t) -> out {=
      if (lf_time_logical_elapsed() % SEC(5) == 0) {
        lf_set(out, 1);
      }

      if (lf_time_logical_elapsed() % MSEC(500) == 0) {
        instant_t lag = lf_time_physical() - lf_time_logical();
        if(fp == NULL) {
          lf_print("Couldn't open the file.");
        } else {
          fprintf(fp, "%ld,", lag);
          fprintf(fp, "\n");
        }
      }
  =}

  reaction(shutdown) {=
    fclose(fp);
  =}
}

reactor Receiver {
  state count:int = 0;
  input in: int

  reaction(in) {=
    self->count++;
  =}

  reaction(shutdown) {=
    lf_print("Received %d messages.", self->count);
  =}
}

federated reactor at localhost {
  s_s = new Sender(Period = 20 msec, ResultFile = ".//SporadicSender_20ms.csv")
  s_r = new Receiver()

  s_s.out -> s_r.in
}
